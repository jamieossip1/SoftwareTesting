name: Java CI/CD Pipeline with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Development/Build stage (Clean cached data)
  build_clean:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven
      - name: Clean Build with Maven
        run: mvn clean --file ILP-Coursework-main/pom.xml

  # Building -> Testing stage (Runs test files in the repo)
  build_test:

    runs-on: ubuntu-latest
    needs: build_clean
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven
      - name: Build and Run Tests with Maven
        run: mvn test --file pom.xml

  # Build package (Creates JAR)
  build_package:

    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven
      - name: Package with Maven
        run: mvn -B package --file pom.xml

  # Deployment stage (Build and push Docker image)
  publish-job:

    runs-on: ubuntu-latest
    needs: build_package
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
      - run: mvn --batch-mode --update-snapshots verify
      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging

      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v3
        with:
          image: yourdockerusername/yourimagename
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

